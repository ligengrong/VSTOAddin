<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>